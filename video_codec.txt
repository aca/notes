CRF Guide (Constant Rate Factor in x264 and x265)  http://slhck.info/video/2017/02/24/crf-guide.html

ffmpeg
==============================================================================
https://github.com/leandromoreira/ffmpeg-libav-tutorial

https://superuser.com/a/490691
Besides ffmpeg's options, encoders have "private options". To see all options:

    ffmpeg -h full

-movflags faststart
    Mandatory for online video: this will move some metadata to the beginning of
    the file so that playback can begin before it is completely downloaded.

Quality
-------

Quality is controlled either by bitrate (-b:v (video), -b:a (audio), presets
(slow, fast, etc.)), or by codec-specific options. E.g. x264 supports various
encoding methods, with the Constant Rate Factor (CRF) being the most
sophisticated: it produces variable bitrate, but overall good quality in
a single pass. Range is 0-51 (sane range is 19~26), 23 is default.

    ffmpeg -i input.mp4 -c:v libx264 -crf 23 output.mp4

x264 *presets* primarily affect encoding speed vs compression
(quality-per-filesize), they do not change VISUAL quality, only final bitrate
(and therefore output file size).

The problem with hardware encoders is that they use outdated versions of the
codec. For older codecs like x264 that is less of an issue, but for x265 the
difference is huge.


control async/vsync
  : https://stackoverflow.com/questions/49718317/append-black-frames-to-video-when-audio-is-longer-in-ffmpeg
  https://trac.ffmpeg.org/ticket/4674
    > encoding with -async 1 works fine but produces silent moments.
  does "-vsync 1" dup frames to keep sync with audio?
  PTS = presentation timestamps
    filter: setpts
    https://ffmpeg.org/ffmpeg-filters.html#setpts_002c-asetpts
  http://forum.doom9.org/archive/index.php/t-163290.html
    > use "-async 1" instead "-vsync 0" and "-r 23.976"...
    or:
    > ffmpeg -fflags +genpts+igndts -i <input> <other encoding options> -r:v 30 -vsync 2 -async 1 -map 0:v,0:a -map 0:a <output.mp4>
    > That effectively tries to sync the video to the audio and drops frames to
    > prevent frames with same pts, flags the stream as 30fps (was proper for
    > this particular source, adjust to yours) and keeps it VFR still (i.e. does
    > not output duplicate frames).
